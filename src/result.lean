import arborescence
       contract
       connected
       covering

noncomputable theory

open category_theory

instance end_is_free {G} [groupoid G] [inhabited G] [preconnected_groupoid G] [is_free_groupoid G] :
  is_free_group (End (default G)) :=
contract (geodesic_subgraph _)

instance subgroup_is_free {G} [group.{0} G] [is_free_group G] (H : subgroup G) :
  is_free_group H :=
is_free_group_mul_equiv (End_mul_equiv_subgroup H)

-- things left to do:
--   write readme
--   show that the kernel of the map `⟨x, y⟩ →* ℤ` which sends x to 1 and y to 0 is
--    freely generated by `{ x^n y x^(-n) | n ∈ ℤ }`
--    (can do this by showing proving that the geodesic subgraph is what it is)